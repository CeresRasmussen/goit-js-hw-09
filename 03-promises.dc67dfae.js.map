{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,SACjCC,gBAAiBF,SAASC,cAAc,uBACxCE,eAAgBH,SAASC,cAAc,sBACvCG,WAAYJ,SAASC,cAAc,wBACnCI,UAAWL,SAASC,cAAc,0BAGpC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFK,EAAO,C,SAAEP,E,MAAUC,IAErBK,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,EAAM,G,CA0BbV,EAAKC,SAASiB,iBAAiB,UAtB/B,SAAkBC,GAChBnB,EAAKO,UAAUa,UAAW,EAC1BD,EAAEE,iBACF,MAAMC,EAAStB,EAAKM,WAAWiB,MAC/B,IAAIC,EAAQC,OAAOzB,EAAKI,gBAAgBmB,OACpCG,EAAYD,OAAOzB,EAAKK,eAAekB,OAC3C,IAAK,IAAII,EAAQ,EAAGA,GAASL,EAAQK,GAAS,EAC5CnB,EAAcmB,EAAOH,GAClBI,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAU,IAEvEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA/B,GAASgC,OAAOG,QAAQ,oBAAoBxB,QAAeC,MAAU,IAGzEc,GAASE,EAEXT,YAAW,KACTjB,EAAKO,UAAUa,UAAW,CAAK,GAC9BI,GACHxB,EAAKC,SAASiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  dataForm: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('input[name=\"delay\"]'),\n  delayStepInput: document.querySelector('input[name=\"step\"]'),\n  amountStep: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        reject({ position, delay });\n      }\n      resolve({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  refs.submitBtn.disabled = true;\n  e.preventDefault();\n  const amount = refs.amountStep.value;\n  let delay = Number(refs.firstDelayInput.value);\n  let stepDelay = Number(refs.delayStepInput.value);\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += stepDelay;\n  }\n  setTimeout(() => {\n    refs.submitBtn.disabled = false;\n  }, delay);\n  refs.dataForm.reset();\n}\nrefs.dataForm.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","dataForm","document","querySelector","firstDelayInput","delayStepInput","amountStep","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","disabled","preventDefault","amount","value","delay1","Number","stepDelay","index","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.dc67dfae.js.map"}